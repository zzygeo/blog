import{_ as s,c as a,b as e,o as p}from"./app-BpUWo912.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="为什么要使用openfeign" tabindex="-1"><a class="header-anchor" href="#为什么要使用openfeign"><span>为什么要使用openfeign?</span></a></h2><p>主要还是对外暴露某个服务的一系列接口，用来规范调用，当服务之间相互调用的时候，采用restTemplate+loadBalancer已经不方便管理了。而且openfeigin集成了loadBalancer的功能，并且可以结合sentinel来对接口进行限流降级。</p><h2 id="loadbalancer的算法切换" tabindex="-1"><a class="header-anchor" href="#loadbalancer的算法切换"><span>loadbalancer的算法切换</span></a></h2><p>openfeign集成了loadbalancer，可实现均衡负载。</p><p>从轮询算法切换到随机算法的配置如下，记得一定要<strong>指定这个负载均衡器的名称</strong>，不然在调用的时候可能会出现错误，比如我测试调用网关进行路由转发的时候就出现了问题：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@LoadBalancerClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;pay-order&quot;</span><span class="token punctuation">,</span> configuration <span class="token operator">=</span> <span class="token class-name">RestTemplateConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@LoadBalanced</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token class-name">ReactorLoadBalancer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServiceInstance</span><span class="token punctuation">&gt;</span></span> <span class="token function">randomLoadBalancer</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span></span>
<span class="line">                                                            <span class="token class-name">LoadBalancerClientFactory</span> loadBalancerClientFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> name <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">LoadBalancerClientFactory</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RandomLoadBalancer</span><span class="token punctuation">(</span>loadBalancerClientFactory</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">getLazyProvider</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token class-name">ServiceInstanceListSupplier</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="超时控制" tabindex="-1"><a class="header-anchor" href="#超时控制"><span>超时控制</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">cloud</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">openfeign</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">client</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">pay-order</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">connect-timeout</span><span class="token punctuation">:</span> <span class="token number">5000</span></span>
<span class="line">            <span class="token key atrule">read-timeout</span><span class="token punctuation">:</span> <span class="token number">5000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="超时重试和日志级别" tabindex="-1"><a class="header-anchor" href="#超时重试和日志级别"><span>超时重试和日志级别</span></a></h2><p>当超过读取时间时，默认是不重试的，可以通过以下的配置来开启重试。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 日志</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Logger<span class="token punctuation">.</span>Level</span> <span class="token function">feignLoggerLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Logger<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span><span class="token constant">FULL</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 重试</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Retryer</span> <span class="token function">retryer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 初始间隔时间，最大间隔时间，最大次数</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Retryer<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更换openfeign的调用库" tabindex="-1"><a class="header-anchor" href="#更换openfeign的调用库"><span>更换Openfeign的调用库</span></a></h2><p>Openfeign调用默认使用的是httpClient4（连接管理和线程池机制落后），官网已经不再推荐使用了，建议使用apache httpclient5。</p><p>添加依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.httpcomponents.client5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>httpclient5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>feign-hc5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>13.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在yaml里配置：</p><p>spring.cloud.openfeign.httpclient.hc5.enabled=true</p><h2 id="openfeign的请求-响应压缩" tabindex="-1"><a class="header-anchor" href="#openfeign的请求-响应压缩"><span>Openfeign的请求/响应压缩</span></a></h2><p>配置以下内容：</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">spring.cloud.openfeign.compression.request.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.cloud.openfeign.compression.request.mime-types</span><span class="token punctuation">=</span><span class="token value attr-value">text/xml,application/xml,application/json # 触发请求的数据类型</span></span>
<span class="line"><span class="token key attr-name">spring.cloud.openfeign.compression.request.min-request-size</span><span class="token punctuation">=</span><span class="token value attr-value">2048 # 触发请求的数据大小</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">spring.cloud.openfeign.compression.response.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20)]))}const o=s(t,[["render",l],["__file","openfeign.html.vue"]]),u=JSON.parse('{"path":"/java/springcloud/openfeign.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"为什么要使用openfeign?","slug":"为什么要使用openfeign","link":"#为什么要使用openfeign","children":[]},{"level":2,"title":"loadbalancer的算法切换","slug":"loadbalancer的算法切换","link":"#loadbalancer的算法切换","children":[]},{"level":2,"title":"超时控制","slug":"超时控制","link":"#超时控制","children":[]},{"level":2,"title":"超时重试和日志级别","slug":"超时重试和日志级别","link":"#超时重试和日志级别","children":[]},{"level":2,"title":"更换Openfeign的调用库","slug":"更换openfeign的调用库","link":"#更换openfeign的调用库","children":[]},{"level":2,"title":"Openfeign的请求/响应压缩","slug":"openfeign的请求-响应压缩","link":"#openfeign的请求-响应压缩","children":[]}],"git":{"updatedTime":1733981086000,"contributors":[{"name":"zhongyan.zhou","email":"zhongyan.zhou@eulee.cn","commits":1,"url":"https://github.com/zhongyan.zhou"}]},"filePathRelative":"java/springcloud/openfeign.md"}');export{o as comp,u as data};
