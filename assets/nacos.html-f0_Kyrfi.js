import{_ as s,c as a,b as e,o as p}from"./app-BpUWo912.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入"><span>引入</span></a></h2><p>微服务与传统单体式应用架构最大区别就是强调软件模块的拆分。在单体架构下，一个应用系统的多个功能模块由于组织在一起在同一个应用进程内部署与运行，因此，模块之间直接通过方法调用即可完成对一次请求的响应。但在微服务系统中，需要对一个应用系统根据其功能特点，按照一定粒度进行拆分后单独部署，以便实现模块内的高内聚，模块间的低耦合，实现整个微服务系统的高可扩展性。</p><p>原来一次在一个应用内即可完成的请求处理，会出现跨进程跨主机的服务调用，* <em>如何让这个服务之间能互相发现像单体式应用一样提供统一对外的服务调用能力是微服务框架层面需要重点解决的核心问题之一</em>* 。服务注册与发现模型由此诞生了。</p><h2 id="分布式配置中心的作用" tabindex="-1"><a class="header-anchor" href="#分布式配置中心的作用"><span>分布式配置中心的作用</span></a></h2><ol><li><p>管理应用程序配置：当有大量应用程序需要管理时，<strong>手动维护配置文件会变得非常困难</strong>。分布式配置中心提供了一个集中管理和分发配置信息的解决方案。</p></li><li><p>环境隔离：在开发、测试和生产等不同环境中，应用程序的配置信息往往都会有不同。使用分布式配置中心，可以**轻松地管理和分发不同环境下的配置信息 **。</p></li><li><p>提高程序安全性：将配置信息存储在代码库或应用程序文件中可能会导致安全风险，因为这些信息可能会被意外地泄漏或被恶意攻击者利用。使用分布式配置，可以将配置信息加密和保护。</p></li><li><p>动态更新配置：在应用程序运行时，可能需要动态地更新配置信息，以便应用程序可以及时响应变化。</p></li></ol><h2 id="启动nacos" tabindex="-1"><a class="header-anchor" href="#启动nacos"><span>启动nacos</span></a></h2><h3 id="创建一个数据库" tabindex="-1"><a class="header-anchor" href="#创建一个数据库"><span>创建一个数据库</span></a></h3><p>直接找到alibaba/nacos仓库的<a href="https://github.com/alibaba/nacos/blob/develop/distribution/conf/mysql-schema.sql" target="_blank" rel="noopener noreferrer">mysql表文件</a> 创建一个数据库，在docker-compose启动的时候需要指定这个数据库。</p><h3 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>docker-compose</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">nacos</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> springcloud/springcloud<span class="token punctuation">-</span>server<span class="token punctuation">:</span>v2.2.0</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;8848:8848&quot;</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;9848:9848&quot;</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;9849:9849&quot;</span></span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">JVM_XMS</span><span class="token punctuation">:</span> 256m</span>
<span class="line">      <span class="token key atrule">JVM_XMX</span><span class="token punctuation">:</span> 256m</span>
<span class="line">      <span class="token key atrule">MODE</span><span class="token punctuation">:</span> standalone</span>
<span class="line">      <span class="token key atrule">MYSQL_SERVICE_HOST</span><span class="token punctuation">:</span> 127.0.0.1</span>
<span class="line">      <span class="token key atrule">MYSQL_SERVICE_DB_NAME</span><span class="token punctuation">:</span> nacos_config</span>
<span class="line">      <span class="token key atrule">MYSQL_SERVICE_USER</span><span class="token punctuation">:</span> root</span>
<span class="line">      <span class="token key atrule">MYSQL_SERVICE_PASSWORD</span><span class="token punctuation">:</span> <span class="token number">123</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> /Users/zzy/document/docker_data/springcloud/logs<span class="token punctuation">:</span>/home/springcloud/logs</span>
<span class="line">      <span class="token punctuation">-</span> /Users/zzy/document/docker_data/springcloud/conf<span class="token punctuation">:</span>/home/springcloud/conf</span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用云原生脚手架创建" tabindex="-1"><a class="header-anchor" href="#使用云原生脚手架创建"><span>使用云原生脚手架创建</span></a></h2><p><a href="https://start.aliyun.com/?spm=a2c6h.12873639.article-detail.7.4c8b5f3bdGfCws" target="_blank" rel="noopener noreferrer">地址</a></p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>介绍一些nacos的基本使用方法和tips。</p><h3 id="引入nacos-config依赖报错" tabindex="-1"><a class="header-anchor" href="#引入nacos-config依赖报错"><span>引入nacos-config依赖报错</span></a></h3><p>在引入了spring-cloud-starter-alibaba-nacos-config这个依赖以后，如果不配置spring.config.import选项会报错，可以配置如下解决。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">import</span><span class="token punctuation">:</span> optional<span class="token punctuation">:</span>nacos<span class="token punctuation">:</span>instead</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动态获取nacos的配置" tabindex="-1"><a class="header-anchor" href="#动态获取nacos的配置"><span>动态获取nacos的配置</span></a></h3><p>配置依赖</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yaml配置</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">application</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">name</span><span class="token punctuation">:</span> springcloud<span class="token punctuation">-</span>config<span class="token punctuation">-</span>example</span>
<span class="line">  <span class="token key atrule">cloud</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">nacos</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">serverAddr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span></span>
<span class="line">        <span class="token key atrule">username</span><span class="token punctuation">:</span> <span class="token string">&#39;nacos&#39;</span></span>
<span class="line">        <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&#39;nacos&#39;</span></span>
<span class="line">        <span class="token key atrule">extendKey</span><span class="token punctuation">:</span> value</span>
<span class="line">        <span class="token key atrule">refresh-enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 自动刷新配置，默认为true，不设置这个无法自动刷新配置</span></span>
<span class="line">  <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">import</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> nacos<span class="token punctuation">:</span>springcloud<span class="token punctuation">-</span>config<span class="token punctuation">-</span>example.properties<span class="token punctuation">?</span>refresh=true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将nacos的configdata配置调整为debug可以看到每次配置变更时重新加载的配置</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">logging</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">level</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">com.alibaba.cloud.nacos.configdata</span><span class="token punctuation">:</span> debug</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代码控制配置crud" tabindex="-1"><a class="header-anchor" href="#代码控制配置crud"><span>代码控制配置crud</span></a></h3><p>一段介绍获取配置、创建配置、删除配置、监听配置的代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/nacos&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DockingInterfaceExample</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">DockingInterfaceExample</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Nacos group.</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_GROUP</span> <span class="token operator">=</span> <span class="token string">&quot;DEFAULT_GROUP&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Autowired</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">NacosConfigManager</span> nacosConfigManager<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Get configuration information. 获取配置</span>
<span class="line">	 *</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">dataId</span> dataId</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">group</span> group</span>
<span class="line">	 * <span class="token keyword">@return</span> config</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/getConfig&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;dataId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> dataId<span class="token punctuation">,</span></span>
<span class="line">			<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;group&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> group<span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			group <span class="token operator">=</span> <span class="token constant">DEFAULT_GROUP</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> nacosConfigManager<span class="token punctuation">.</span><span class="token function">getConfigService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> configService<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Publish configuration. 发布配置信息</span>
<span class="line">	 *</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">dataId</span> dataId</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">group</span> group</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">content</span> content</span>
<span class="line">	 * <span class="token keyword">@return</span> boolean</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/publishConfig&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">publishConfig</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;dataId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> dataId<span class="token punctuation">,</span></span>
<span class="line">			<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;group&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> group<span class="token punctuation">,</span></span>
<span class="line">			<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			group <span class="token operator">=</span> <span class="token constant">DEFAULT_GROUP</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> nacosConfigManager<span class="token punctuation">.</span><span class="token function">getConfigService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> configService<span class="token punctuation">.</span><span class="token function">publishConfig</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Delete configuration. 删除配置</span>
<span class="line">	 *</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">dataId</span> dataId</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">group</span> group</span>
<span class="line">	 * <span class="token keyword">@return</span> boolean</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/removeConfig&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">removeConfig</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;dataId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> dataId<span class="token punctuation">,</span></span>
<span class="line">			<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;group&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> group<span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			group <span class="token operator">=</span> <span class="token constant">DEFAULT_GROUP</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> nacosConfigManager<span class="token punctuation">.</span><span class="token function">getConfigService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> configService<span class="token punctuation">.</span><span class="token function">removeConfig</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Add listener configuration information. 增加监听</span>
<span class="line">	 *</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">dataId</span> dataId</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token parameter">group</span> group</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/listener&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">listenerConfig</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;dataId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> dataId<span class="token punctuation">,</span></span>
<span class="line">			<span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;group&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> group<span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			group <span class="token operator">=</span> <span class="token constant">DEFAULT_GROUP</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> nacosConfigManager<span class="token punctuation">.</span><span class="token function">getConfigService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		configService<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token annotation punctuation">@Override</span></span>
<span class="line">			<span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token annotation punctuation">@Override</span></span>
<span class="line">			<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveConfigInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> configInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[Listen for configuration changes]:{}&quot;</span><span class="token punctuation">,</span> configInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token string">&quot;Add Lister successfully!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-value获取配置" tabindex="-1"><a class="header-anchor" href="#使用-value获取配置"><span>使用@Value获取配置</span></a></h3><p>当使用@Value获取配置的时候，一定要使用@RefreshScope注解。</p><p>@RefreshScope会在配置变更的时候，销毁原来的bean，创新新的bean。</p><p>验证如下，有以下的配置类。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/nacos/annotation&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@RefreshScope</span> <span class="token comment">// 当使用@Value注解时，需要添加@RefreshScope注解,这个注解在配置变更时会销毁bean，重新创建bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValueAnnotationExample</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.cloud.nacos.config.serverAddr:}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> serverAddr<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.cloud.nacos.config.prefix:}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> prefix<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.cloud.nacos.config.group:}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> group<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.cloud.nacos.config.namespace:}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> namespace<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@GetMapping</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;serverAddr&quot;</span><span class="token punctuation">,</span> serverAddr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;prefix&quot;</span><span class="token punctuation">,</span> prefix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;group&quot;</span><span class="token punctuation">,</span> group<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> result<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先请求一次接口，然后在nacos里修改group信息，再次请求，观察两次的打印。</p><p>修改前：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">GROUP11</span>
<span class="line">com.alibaba.cloud.examples.example.ValueAnnotationExample@7b46b2d3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改后</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">GROUP</span>
<span class="line">com.alibaba.cloud.examples.example.ValueAnnotationExample@5246b1ac</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到前后输出的实例的地址变了。</p><h3 id="actuator-refresh手动触发更新" tabindex="-1"><a class="header-anchor" href="#actuator-refresh手动触发更新"><span>actuator/refresh手动触发更新</span></a></h3><p>修改配置如下，关闭自动刷新，开放actuator的refresh端点。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">application</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">name</span><span class="token punctuation">:</span> springcloud<span class="token punctuation">-</span>config<span class="token punctuation">-</span>example</span>
<span class="line">  <span class="token key atrule">cloud</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">nacos</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">serverAddr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span></span>
<span class="line">        <span class="token key atrule">username</span><span class="token punctuation">:</span> <span class="token string">&#39;springcloud&#39;</span></span>
<span class="line">        <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&#39;springcloud&#39;</span></span>
<span class="line">        <span class="token key atrule">extendKey</span><span class="token punctuation">:</span> value</span>
<span class="line">        <span class="token key atrule">refresh-enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 自动刷新配置</span></span>
<span class="line">  <span class="token key atrule">config</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">import</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> springcloud<span class="token punctuation">:</span>springcloud<span class="token punctuation">-</span>config<span class="token punctuation">-</span>example.properties<span class="token punctuation">?</span>refresh=true</span>
<span class="line"><span class="token key atrule">management</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">health</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">show-details</span><span class="token punctuation">:</span> always</span>
<span class="line">  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">web</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">exposure</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&#39;refresh&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种情况下，即使修改了nacos的配置，也不会自动刷新配置（<strong>自己监听的配置可以</strong>）。</p><p>当使用post方式请求host:port/actuator/refresh端点时（需要<strong>开放refresh端点</strong>），会触发更新，比如使用curl。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">curl -X POST http://localhost:18084/actuator/refresh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="nacos的profiles粒度控制" tabindex="-1"><a class="header-anchor" href="#nacos的profiles粒度控制"><span>nacos的profiles粒度控制</span></a></h3><p>从Spring Boot 2.4版本开始，bootstrap.yml不再被自动加载，除非你明确引入了相关的启动器（starter）来支持它。</p><p>因此直接在配置在spring.config.import这样配置，在启动的时候指定-Dspring.profiles.active。</p><p>springboot会默认读取\${spring.application.name}-\${spring.profiles.active}.{spring.cloud.nacos.config.file-extension}的配置。</p><h3 id="nacos的namespace粒度控制" tabindex="-1"><a class="header-anchor" href="#nacos的namespace粒度控制"><span>nacos的namespace粒度控制</span></a></h3><p>namespace用来隔离不同的环境，比如开发环境、生产环境。先在nacos里创建不同的namespace，即使data-id一样，在java启动时候指定-Dspring.cloud.config.namespace以获得不同的配置。</p><h3 id="nacos读取配置的优先级" tabindex="-1"><a class="header-anchor" href="#nacos读取配置的优先级"><span>nacos读取配置的优先级</span></a></h3><p>Nacos Config 目前提供了三种配置能力从 Nacos 拉取相关的配置：</p><ol><li><p>通过 spring.cloud.nacos.config.shared-configs.data-id 支持多个共享 Data Id 的配置</p></li><li><p>通过 spring.cloud.nacos.config.extension-config.data-id 的方式支持多个扩展 Data Id 的配置</p></li><li><p>通过内部相关规则(应用名、应用名+ Profile )自动生成相关的 Data Id 配置</p></li></ol><p>当三种方式共同使用时，他们的一个优先级关系是: 1 &lt; 2 &lt; 3</p><h3 id="结合openfeign的一次简单调用" tabindex="-1"><a class="header-anchor" href="#结合openfeign的一次简单调用"><span>结合openfeign的一次简单调用</span></a></h3><p>一个module专门来存放service</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user/{name}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>provider module部分：</p><p>启动类添加@EnableDiscoveryClient。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@SpringBootApplication</span></span>
<span class="line"><span class="token annotation punctuation">@EnableDiscoveryClient</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProviderApplication</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ProviderApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务提供代码:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProviderController</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user/{name}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;provider &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>consumer module部分：</p><p>启动类添加</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@SpringBootApplication</span></span>
<span class="line"><span class="token annotation punctuation">@EnableDiscoveryClient</span></span>
<span class="line"><span class="token annotation punctuation">@EnableFeignClients</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerApplication</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ConsumerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>声明FeignClient</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;provider&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FeignService</span> <span class="token keyword">extends</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>controller调用的代码。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerController</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">FeignService</span> feignService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user/{name}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> feignService<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nacos注册服务的源码探究" tabindex="-1"><a class="header-anchor" href="#nacos注册服务的源码探究"><span>nacos注册服务的源码探究</span></a></h3><p>在springboot项目中，通过spring.factories文件中的自动配置类<strong>NacosDiscoveryAutoConfiguration</strong>，Nacos 客户端会被自动初始化。</p><p>这个信息可以在spring-cloud-starter-alibaba-nacos包找到:</p><p><img src="https://github.com/zzygeo/picx-images-hosting/raw/master/20241119/nacos.factories.26li9zknu1.webp" alt="nacos"></p><p>当NacosServiceRegistryAutoConfiguration类被自动加载的时候，它负责创建NacosServiceRegistry、NacosRegistration 和 NacosAutoServiceRegistration 这三个 Bean。</p><p><img src="https://github.com/zzygeo/picx-images-hosting/raw/master/NacosServiceRegistryAutoConfiguration类.2yydrrzq9m.webp" alt="NacosServiceRegistryAutoConfiguration类"></p><p>NacosAutoServiceRegistration类调用super（构造函数）将NacosServiceRegistry注册到了AbstractAutoServiceRegistration。</p><p>NacosAutoServiceRegistration继承自 AbstractAutoServiceRegistration，并且实现了 ApplicationListener&lt;ApplicationEvent&gt; 接口，意味着它可以监听应用程序事件并作出相应的响应。</p><p>当监听到事件变化以后，触发了start方法。</p><p><img src="https://github.com/zzygeo/picx-images-hosting/raw/master/NacosAutoServiceRegistry.5mnu25002f.webp" alt="NacosAutoServiceRegistry"></p><p><img src="https://github.com/zzygeo/picx-images-hosting/raw/master/AsbtractAutoService的注册.pfd8ar8yi.webp" alt="AsbtractAutoService的注册"></p><p>随后调用了已经被注册好的NacosServiceRegistry类的register方法。</p><p><img src="https://github.com/zzygeo/picx-images-hosting/raw/master/NacosServiceRegister的调用.3nrnbt45c2.webp" alt="NacosServiceRegister的调用"></p><p>这个register干了什么呢，先与nacos服务器建立连接创建了namingService，然后拿到data-id、group信息，将服务实例信息一起注册到nacos服务器。</p><p><img src="https://github.com/zzygeo/picx-images-hosting/raw/master/20241119/nacosServerRegistry注册服务.6f0pjubuao.webp" alt="nacosServerRegistry注册服务"></p>`,84)]))}const o=s(t,[["render",l],["__file","nacos.html.vue"]]),u=JSON.parse('{"path":"/java/springcloud/nacos.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"引入","slug":"引入","link":"#引入","children":[]},{"level":2,"title":"分布式配置中心的作用","slug":"分布式配置中心的作用","link":"#分布式配置中心的作用","children":[]},{"level":2,"title":"启动nacos","slug":"启动nacos","link":"#启动nacos","children":[{"level":3,"title":"创建一个数据库","slug":"创建一个数据库","link":"#创建一个数据库","children":[]},{"level":3,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]}]},{"level":2,"title":"使用云原生脚手架创建","slug":"使用云原生脚手架创建","link":"#使用云原生脚手架创建","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"引入nacos-config依赖报错","slug":"引入nacos-config依赖报错","link":"#引入nacos-config依赖报错","children":[]},{"level":3,"title":"动态获取nacos的配置","slug":"动态获取nacos的配置","link":"#动态获取nacos的配置","children":[]},{"level":3,"title":"代码控制配置crud","slug":"代码控制配置crud","link":"#代码控制配置crud","children":[]},{"level":3,"title":"使用@Value获取配置","slug":"使用-value获取配置","link":"#使用-value获取配置","children":[]},{"level":3,"title":"actuator/refresh手动触发更新","slug":"actuator-refresh手动触发更新","link":"#actuator-refresh手动触发更新","children":[]},{"level":3,"title":"nacos的profiles粒度控制","slug":"nacos的profiles粒度控制","link":"#nacos的profiles粒度控制","children":[]},{"level":3,"title":"nacos的namespace粒度控制","slug":"nacos的namespace粒度控制","link":"#nacos的namespace粒度控制","children":[]},{"level":3,"title":"nacos读取配置的优先级","slug":"nacos读取配置的优先级","link":"#nacos读取配置的优先级","children":[]},{"level":3,"title":"结合openfeign的一次简单调用","slug":"结合openfeign的一次简单调用","link":"#结合openfeign的一次简单调用","children":[]},{"level":3,"title":"nacos注册服务的源码探究","slug":"nacos注册服务的源码探究","link":"#nacos注册服务的源码探究","children":[]}]}],"git":{"updatedTime":1733987268000,"contributors":[{"name":"zhongyan.zhou","email":"zhongyan.zhou@eulee.cn","commits":6,"url":"https://github.com/zhongyan.zhou"}]},"filePathRelative":"java/springcloud/nacos.md"}');export{o as comp,u as data};
